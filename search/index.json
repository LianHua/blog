[{"content":"这几天，天气变化着实有点快。昨天还是棉袄，今天就要穿短袖了。 在中国传统文化中，有句俗语“二四八月乱穿衣”，意指在农历的二月、四月和八月，气温变化无常，人们往往难以把握穿衣的厚薄，因此出现了穿着各异的现象。这一现象不仅反映了自然气候的多变性，也隐喻了人们在面对复杂多变环境时的主观适应性。 在哲学领域，主观与客观的关系是一个永恒的话题。主观是指人的意识、思想和感觉，而客观则是指独立于人的意识之外的现实存在。二者之间的关系，既对立又统一，是辩证法的重要内容。 首先，主观与客观是对立的。客观现实是独立存在的，不以人的意志为转移。例如，自然界的规律、社会的发展规律等，都是客观存在的，不受个人主观愿望的影响。而主观则是人的内心世界，是个人的思想、情感和意愿的体现，它受到个人经历、教育、文化背景等多种因素的影响。 然而，主观与客观又是统一的。人的认识和行动都是在客观现实的基础上进行的，客观现实为主观提供了内容和对象。同时，人的主观能动性也能够反作用于客观现实，通过实践活动改变客观世界。例如，人们通过科学技术的创新，改变了生产方式，提高了生活质量，这些都是主观能动性作用于客观现实的体现。 “二四八月乱穿衣”的俗语，从某种程度上反映了人们在面对客观气候变化时的主观适应过程。在这个过程中，人们需要根据气温的变化，不断调整自己的穿着，以达到舒适的状态。这既是对客观现实的适应，也是主观能动性的体现。 从这个角度来看，主观与客观的辩证关系，要求我们在认识和改造世界的过程中，既要尊重客观规律，又要发挥主观能动性。在实际生活中，这意味着我们需要在了解和把握客观环境的基础上，发挥个人的创造性和主动性，不断适应和改变环境，以实现个人和社会的发展。 总之，“二四八月乱穿衣”不仅是对自然现象的描述，更是对主观与客观辩证关系的生动体现。通过这一现象，我们可以更深刻地理解主观与客观的辩证统一关系，认识到在实际生活中，既要尊重客观规律，又要发挥主观能动性，以实现个人和社会的和谐发展。\n","date":"2024-04-10T11:35:35+08:00","image":"https://picsum.photos/800/600.webp?random=e85e738b","permalink":"https://mide.eu.org/posts/2024/%E4%BA%8C%E5%9B%9B%E5%85%AB%E6%9C%88%E4%B9%B1%E7%A9%BF%E8%A1%A3/","title":"二四八月乱穿衣"},{"content":" # 内容来自网络 本文以Windows系统为例进行说明，在个人电脑上使用Git命令来操作GitHub上的项目，本来都很正常，突然某一天开始，会提示如下错误\nssh: connect to host github.com port 22: Connection refused。\n$ git pull ssh: connect to host github.com port 22: Connection refused fatal: Could not read from remote repository. ​ Please make sure you have the correct access rights and the repository exists. 排查思路\nssh: connect to host github.com port 22: Connection refused\n这个错误提示的是连接github.com的22端口被拒绝了。\n原本以为http://github.com挂了，但是浏览器访问http://github.com一切正常。\n网上搜索这个报错，发现很多人遇到这个问题，大概有2个原因和对应解决方案：\n使用GitHub的443端口 22端口可能被防火墙屏蔽了，可以尝试连接GitHub的443端口。\n$ vim ~/.ssh/config # Add section below to it Host github.com Hostname ssh.github.com Port 443\n$ ssh -T git@github.com Hi xxxxx! You\u0026#39;ve successfully authenticated, but GitHub does not provide shell access. 这个解决方案的思路是：给~/.ssh/config文件里添加如下内容，这样ssh连接GitHub的时候就会使用443端口。 Host github.com Hostname ssh.github.com Port 443\n如果~/.ssh目录下没有config文件，新建一个即可。 修改完~/.ssh/config文件后，使用ssh -T git@github.com来测试和GitHub的网络通信是否正常，如果提示Hi xxxxx! You\u0026#39;ve successfully authenticated, but GitHub does not provide shell access. 就表示一切正常了。 但是，这个方案在我这里行不通，修改后还是提示ssh: connect to host github.com port 443: Connection refused。 这个方案有效的前提是：执行命令ssh -T -p 443 git@ssh.github.com后不再提示connection refused，所以要尝试这个方案的小伙伴先执行这条命令测试下。 使用https协议，不要使用ssh协议 在你的GitHub的本地repo目录，执行如下命令： $ git config --local -e 然后把里面的url配置项从git格式 url = git@github.com:username/repo.git 修改为https格式 url = https://github.com/username/repo.git 这个其实修改的是repo根目录下的./git/config文件。 但是这个方法在我这里同样不生效。 ","date":"2024-04-08T00:00:00Z","image":"https://picsum.photos/800/600.webp?random=be3b0966","permalink":"https://mide.eu.org/posts/%E6%8A%98%E8%85%BE/001/","title":"连接github.com的22端口被拒绝"},{"content":"[李慕然的一天]（https://limuran.top/p/hugo-stack-%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96/#%E9%80%89%E4%B8%AD%E6%96%87%E6%9C%AC%E6%A0%B7%E5%BC%8F%E7%BE%8E%E5%8C%96 \u0026ldquo;Hugo Stack 主题美化\u0026rdquo;）\nstilig\n","date":"2024-04-07T16:31:40+08:00","image":"https://picsum.photos/800/600.webp?random=aaf4e0aa","permalink":"https://mide.eu.org/posts/blog/hugostack%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%E5%8F%82%E8%80%83/","title":"Hugostack主题美化参考"},{"content":" # 快坏掉的橘子：一种生活的哲学 在我们日常生活中，橘子是一种常见的水果，它以其鲜艳的色泽、酸甜的口感和丰富的营养价值而受到人们的喜爱。然而，你有没有注意到，往往在橘子即将变质的时候，它的味道会变得更加浓郁，更加令人难忘。这种现象不仅是一种自然现象，更是一种生活的哲学。\n# 橘子的生命周期 橘子从青涩到成熟，再到即将腐烂，它的生命周期仿佛在告诉我们一个关于时间的故事。青涩的橘子，酸涩的口感，象征着年轻时期的挑战和磨难。随着时间的推移，橘子渐渐成熟，口感变得甜美，这正是人生中收获成果的时刻。然而，当橘子开始变质，它的风味变得更加浓郁，这似乎在提醒我们，生命的晚期同样充满了价值和意义。\n# 快坏掉的橘子的启示 快坏掉的橘子给我们的启示是多方面的。首先，它告诉我们要珍惜时间。橘子在即将变质的时候最好吃，这就像人生中那些宝贵的时刻，它们转瞬即逝，我们必须抓住机会，充分享受和利用它们。\n其次，快坏掉的橘子也提醒我们要善于发现事物的潜在价值。在生活中，我们可能会遇到一些看似即将结束或者不再完美的事情，但正是这些时刻，往往蕴含着最深刻的教训和最美好的体验。我们需要学会欣赏这些“快坏掉的橘子”，从中汲取智慧和力量。\n# 生活中的应用 在实际生活中，我们可以从快坏掉的橘子中学到很多。比如，在职场上，我们可能会遇到一些看似即将失败的项目，但这并不意味着我们应该放弃。相反，我们应该更加努力地去挽救它，因为成功往往就在最后的努力之中。\n在人际关系中，我们也会遇到一些看似即将破裂的关系。这时候，我们不应该轻易放弃，而是应该努力去修复和维护这段关系。因为就像快坏掉的橘子一样，关系在最脆弱的时候，也是最需要关爱和呵护的时候。\n# 橘子哲学的深远意义 快坏掉的橘子不仅仅是一种自然现象，它更是一种生活的哲学。它告诉我们，生活中的每一个阶段都有其独特的价值和意义。无论是青涩的挑战，成熟的收获，还是即将结束的转变，都是我们成长和学习的重要时刻。\n这种哲学也鼓励我们去拥抱变化，去接受生活中的不完美。因为变化和不完美往往伴随着成长和机遇。我们需要学会在变化中寻找机会，在不完美中发现美。\n# 结语 快坏掉的橘子是一种生活的隐喻，它教会我们珍惜时间，发现潜在的价值，拥抱变化，并在生活的每一个阶段寻找意义。让我们像品尝即将变质的橘子一样，去品味生活的每一刻，去发现那些被忽视的美好和智慧。这样，我们的人生将会变得更加丰富和有意义。\n","date":"2024-04-06T11:35:35+08:00","image":"https://mide.eu.org/image/%E6%A9%98%E5%AD%90.jpg","permalink":"https://mide.eu.org/posts/2024/%E5%BF%AB%E5%9D%8F%E6%8E%89%E7%9A%84%E6%A9%98%E5%AD%90/","title":"快坏掉的橘子才好吃"},{"content":"春天，这个充满生机与希望的季节，如期而至。然而，在温州这座美丽的沿海城市，三月的天气似乎并没有带来预期中的明媚与温暖。相反，天空被一层灰蒙蒙的雾霾笼罩，给人一种压抑的感觉。这不仅是视觉上的不适，更是对城市居民生活质量的一种挑战。\n温州的三月，常常伴随着湿润的空气和不时的雨水。这种湿润的气候条件，虽然有利于植物的生长，却也为室内环境带来了一些问题。在这样的季节里，房间里往往会散发出一种腐烂的味道，这种味道让人感到不愉快，甚至有些窒息。这不仅仅是一种感官上的不适，更是对居住环境的一种警示。\n春季也是户外活动的好时机。虽然天气有时不尽如人意，但只要选择合适的时间和地点，我们仍然可以享受到春天的美好。比如，可以选择在雨后的空气清新时，去公园散步，呼吸新鲜的空气，感受大自然的洗礼。或者，可以邀请三两好友，一起去郊外踏青，欣赏盛开的花朵，感受春天的气息。\n总的来说，虽然温州三月的天气可能会带来一些不便，但通过采取适当的措施，我们仍然可以享受到春天的美好。让我们积极应对，用行动改善我们的生活环境，让生活充满阳光和希望。\n","date":"2024-04-06T11:35:35+08:00","image":"https://picsum.photos/800/600.webp?random=e85e7d8b","permalink":"https://mide.eu.org/posts/2024/%E9%9B%A8%E4%B8%8B%E4%B8%80%E6%95%B4%E6%99%9A/","title":"雨下一整晚"},{"content":"😎\n# 目录 Hugo 环境搭建 安装 VS Code 安装 Git 安装 Hugo Hugo博客搭建 初始化博客 Stack 主题安装 配置博客各个页面 开始创作 预览博客 原创 折腾\n# 投入 Hugo 的怀抱！ 这篇文章主要介绍了作者在 Windows 11 系统下搭建 Hugo 环境的过程，包括安装 VS Code、Git 和 Hugo，以及使用 Stack 主题搭建博客的步骤。文章详细介绍了安装步骤和配置方法，包括下载安装软件、设置环境变量、初始化博客、安装主题、配置页面、创作文章和预览博客等内容。作者分享了自己的经验和遇到的问题，并提供了解决方案。整体内容涵盖了从环境搭建到博客搭建的全过程，适合初学者参考。\ndocument.addEventListener(\u0026ldquo;DOMContentLoaded\u0026rdquo;,function(){const e=document.querySelector(\u0026quot;.ai-explanation-content\u0026quot;).textContent;new TypeIt(\u0026quot;#ai-explanation\u0026quot;,{strings:e,speed:10,lifeLike:!0,waitUntilVisible:!0}).go()})\n我的环境参数：\nWindows 11 22H2 Google Chrome 114 Markdown 编辑器：VS Code 博客配置编辑器：VS Code 命令行工具：Windows Terminal Git 工具：GitHub Desktop Hugo 版本：0.114.0_extended（笑死，一开始写的时候版本还是 0.112.3） Hugo 主题：Stack # Hugo 环境搭建# # 安装 VS Code# 从官网获取 VS Code 安装包（国内直接下载速度慢，可将下载链接中的域名替换为 vscode.cdn.azure.cn，下载速度直接起飞）\nSelect Additional Tasks 中把下面列出的全部选项打勾\nAdd “Open with Code” action to Windows Explorer file context menu Add “Open with Code” action to Windows Explorer directory context menu Register Code as an editor for supported file types Add to PATH (requires shell restart) install 开始安装，等待安装完成后选择 Finish 至此，VS Code 就安装完成了，接下来安装 Git\n# 安装 Git# 小白直接上手 git 感觉门槛有点高，还是建议装 git 的 GUI 版本\n我选的是 GitHub Desktop\n官网下载安装包\n下载地址：https://desktop.github.com/\n使用 GithubDesktopZhTool 汉化\n个人觉得没任何难度，实在不懂可以看作者的 README 文档\n当然大佬们可以直接用 Git，也不需要我多解释\n# 安装 Hugo# 从 Hugo 官方 github 仓库下载 hugo extended 版本\n下载地址: https://github.com/gohugoio/hugo/releases/latest\n解压下载下来的压缩包，得到 hugo.exe 并放到自己心仪的位置\n我这里放在 E:\\Hugo\\bin\n设置 Hugo 环境变量，依次打开设置-系统-系统信息-高级系统设置-环境变量添加 Hugo 主程序所在文件夹\n检查 hugo 是否安装成功，Win + R 输入 cmd 回车打开 cmd，运行 hugo version，如果输出版本信息则配置成功 如我这里输出（0.114.0）：\nhugo v0.114.0-9df2ec7988e5a217a14901cc76c0b7e76b2e9f02+extended windows/amd64 BuildDate=2023-06-19T17:01:43Z VendorInfo=gohugoio\n恭喜！到这里，基本就都配置完毕了，现在可以开始博客的搭建了\n# Hugo博客搭建# # 初始化博客# 在任意位置右键，选择在终端打开，输入以下命令：\nhugo new site \u0026lt;这里填上你想要的位置\u0026gt; # Stack 主题安装# 获取主题文件\n找到 Stack 主题 GitHub 仓库（链接：https://github.com/CaiJimmy/hugo-theme-stack）\nCode Download → Download ZIP 下载源码解压\n改名为 hugo-theme-stack 后放入博客文件夹根目录 /theme 中\n将获取到的主题中的 exampleSite 文件夹中所有文件复制到博客文件夹根目录中\n编辑 config.yaml，根据自己需要进行配置，作者在配置文件里面写了基本注释（虽然都是英文的）\n官方配置文档: https://stack.jimmycai.com/config/\n# 配置博客各个页面# 如果添加的是自己博客的一个页面，可以在这个页面的 md 文件的 Front Matter 中添加以下内容：\nmenu: main: name: # 名称 weight: -90 params: icon: # 图标名称 如果不是你的博客的一个页面，那么在 config.yaml 中的 menu 部分下添加以下代码：\nmenu: main: - identifier: name: url: weight: params: icon: newTab: identifier: 项目名\nname: 显示名称\nurl: 链接\nweight: 优先级，数值越低优先级越大\nparams:\nicon: 自定义图标\nnewTab: 是否在新标签页打开\n官方文档：https://stack.jimmycai.com/config/menu\n# 开始创作# 博客文章都存放在 /content 中，如果想要创建一篇文章，可以在博客文件夹根目录下打开终端输入以下命令：\nhugo new posts/my-first-post.md 再打开 /content/posts 就可以找到一个 Hugo 为你创建好的一个名为 my-first-post.md 的文件\n当然你也可以使用官方推荐的一篇文章一个文件夹的方式（官方文档: https://stack.jimmycai.com/writing/markdown）\n# 预览博客# 创作完成的你一定想要本地预览你的博客吧，博客根目录右键“在终端打开”，输入以下命令：\nhugo server --navigateToChanged 后面加的 --navigateToChanged 可以省略，加它的作用是可以在你更改某个页面后自动跳转查看该页面的修改\n根本不想每次输代码启动预览服务器的懒癌患者们，可以像我一样在博客根目录新建一个 vbs 文件：\nDim ws Set ws = Wscript.CreateObject(\u0026quot;Wscript.Shell\u0026quot;) ws.run \u0026quot;hugo server --navigateToChanged\u0026quot; Wscript.quit 以后要预览博客可以直接双击运行这个脚本会直接弹出终端界面并启动预览服务器，要停止服务器按 Ctrl + C，终端界面会自己消失\n另：我遇到过以下的报错：\nThis is most likely due to infinite recursion. If this is just a slow template, you can try to increase the 'timeout' config setting. 不知道你会不会遇到，但如果遇到了，那恭喜你节省很多找解决办法的时间，解决办法：在 config.yml 根级加入以下代码：\ntimeout: 10m ","date":"2024-04-04T08:40:51+08:00","image":"https://picsum.photos/800/600.webp?random=be3b0964","permalink":"https://mide.eu.org/posts/%E6%8A%98%E8%85%BE/web001/","title":"hugo搭建博客"},{"content":"image: https://picsum.photos/800/600.webp?random={{ substr (md5 (.Date)) 4 8 }}\n","date":"2024-04-04T08:40:51+08:00","image":"https://picsum.photos/800/600.webp?random=be3b0964","permalink":"https://mide.eu.org/posts/%E6%8A%80%E6%9C%AF/%E6%B5%8B%E8%AF%95%E9%9A%8F%E6%9C%BA%E5%9B%BE%E7%89%87/","title":"测试随机图片"},{"content":"Markdown 是一种轻量级的标记语言，它允许人们使用易读易写的纯文本格式编写文档，然后转换成结构化的HTML页面。Markdown 由 John Gruber 和 Aaron Swartz 共同创建，目的是使人们能够专注于撰写内容而非排版样式。 下面是一些基本的 Markdown 语法：\n# 标题 使用 # 来创建标题。# 的数量表示标题的级别。\n# 一级标题 ## 二级标题 ### 三级标题 #### 四级标题 ##### 五级标题 ###### 六级标题 # 段落和换行 段落之间留一个空行。如果想在行内换行，可以在行尾添加两个空格。\n这是第一段。 这是第二段，这里有两个空格。 这是换行后的效果。 # 强调 使用星号 * 或下划线 _ 来强调文本。\n*斜体文本* 或 _斜体文本_ **粗体文本** 或 __粗体文本__ ***粗斜体文本*** 或 ___粗斜体文本___ # 列表 使用星号 *、加号 + 或连字符 - 来创建无序列表。有序列表则使用数字后跟一个点 1.。\n无序列表： * 列表项一 * 列表项二 * 子列表项一 有序列表： 1. 第一项 2. 第二项 1. 子列表项一 # 链接和图片 使用 [显示文本](链接地址) 来创建链接，使用 ![图片描述](图片链接地址) 来插入图片。\n[访问 Google](https://www.google.com) ![Moonshot AI Logo](https://kimi.moonshot.cn/images/logo.png) # 引用 使用 \u0026gt; 符号来创建引用。\n\u0026gt; 这是一段引用文本。 \u0026gt; \u0026gt; 可以包含多行。 # 代码 使用反引号 ` 来标记代码。\n`print(\u0026#34;Hello, World!\u0026#34;)` # 表格 使用竖线 | 和短横线 - 来创建表格。\n| 表头一 | 表头二 | 表头三 | | ------- | ------- | ------- | | 单元格1 | 单元格2 | 单元格3 | | 单元格4 | 单元格5 | 单元格6 | # 任务列表 使用 - [ ] 来创建任务列表项。\n- [ ] 任务一 - [x] 任务二（已完成） - [ ] 任务三 这些是 Markdown 的基本语法，掌握这些，你就可以开始使用 Markdown 来编写文档了。随着实践的深入，你还可以探索更多的高级功能，如自定义样式、脚注等。\n","date":"2024-04-04T08:40:51+08:00","image":"https://picsum.photos/800/600.webp?random=be3b2964","permalink":"https://mide.eu.org/posts/%E6%8A%80%E6%9C%AF/markdown-%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95-/","title":"玩客云刷机"},{"content":"检查时间\ndate -R\n如果时区及时间不对。执行下面的操作\ncp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime\n再次检查时间\ndate -R\n接下来是添加系统的软件源，这样可以提高安装成功率。输入：\nnano /etc/apt/sources.list\n然后按方向键到最后在空白处添加以下代码：\ndeb https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye main contrib non-free # deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye main contrib non-free deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye-updates main contrib non-free # deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye-updates main contrib non-free deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye-backports main contrib non-free # deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye-backports main contrib non-free deb https://mirrors.tuna.tsinghua.edu.cn/debian-security bullseye-security main contrib non-free # deb-src https://mirrors.tuna.tsinghua.edu.cn/debian-security bullseye-security main contrib non-free 然后就是安装casaos系统了，casaos的安装只要这一条代码就可以 wget -qO- https://get.casaos.io | bash\n如果你的网络不好，可以执行这个国内源代码试试（注意使用了国内源的一键安装以后是无法自动升级casaos系统的）：\ncurl -fsSL cn-get.casaos.io | bash\n小贴士：有很多小伙伴会卡在安装这步，主要还是网络问题。因为casaos的软件源在国外，大家有加速环境的最好能用上。 另外，还总结了一些方法： 换源是可以把原先的软件源用“#”注释掉。比如\n# deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye main contrib non-free 这句前面加了“#”，系统就不会运行这句代码了。同样地可以把复制粘贴的新代码去掉注释，这样就会有更多的新软件源。 另外有的网友不添加软件源反而安装成功了，大家也可以试试。（我怀疑是网络原因，与换源无关） 最后还有小伙伴说他用最新版的底包刷机就成功了，我之前刷机的时候是不成功的。也许是casaos更新了版本的缘故。\n","date":"2024-04-04T08:40:51+08:00","image":"https://picsum.photos/800/600.webp?random=be3b2964","permalink":"https://mide.eu.org/posts/%E6%8A%80%E6%9C%AF/%E7%8E%A9%E5%AE%A2%E4%BA%91%E5%88%B7%E6%9C%BA/","title":"玩客云刷机"},{"content":" # 以下内容摘自网络，记录在此方便查阅。 首先，这不是一个教程，只是我用 Hugo 搭建博客的记录，可以作为参考。因为本人技术很差，只是喜欢折腾。✌️\n所以，本文应该会有一些你可能也会遇到的大佬教程中可能没有详细解释的问题，或者一些我因为我的愚蠢导致的不常见的问题😉。\n从开始折腾 Hugo 到现在已经有大概一个月的时间了。在我开始有了搭建博客的想法后，从实现本地预览，到上传到 GitHub Pages，再部署 Vercel，又买了域名绑定自己的域名，发现了阿里云有学生优惠，领了几个月服务器适用，到域名备案，备案完成后把博客部署在了服务器，但是又觉的发布流程很复杂，又研究自动化创作发布，到现在，目前实现了这样的一套简单自动化的流程：Obsidian 创作，一键预览，一键发布。\n大概记录一下这个流程及实现方式，希望对你有参考价值。\n首先介绍一下我目前的使用环境，使用Hugo框架，魔改后的 Stack主题，阿里云购买的域名，部署在阿里云服务器，用 Obsidian 进行文章创作。\nSo，让我们开始吧💪！\n# 🎆准备一下 # ⬇️下载软件 ✔必须： Hugo\n❓非必须：Git，VsCode，Obsidian\n下载 Hugo 可以去 Hugo 官网 查看，官网提供了不同系统的安装方式，或者在Github页面Releases 下载。\nGit 用来发布到 Github，在我的流程中，部署到自己的服务器也用 Git，如果想纯手动上传到服务器，也不是不可以。\nVsCode 用来进行网站的配置，也有可视化的 Git 界面可以使用。\nObsidian 是个笔记软件，可以用来创作，插件丰富，可疯狂自定义。\nGit、 Obsidian和 VsCode 直接上官网下载安装就好，可以看 L1nSn0w’的这篇文章《（1）带着Stack主题入坑Hugo》\n⚠Hugo 需要 Go 环境。 ⚠如果要使用 Stack 主题的话，请一定下载 extended 版本的。或者不管什么主题直接下 extended 版本。 # 💻Git 基本配置 安装好 Git 需要一些基本配置。\n随便一个位置鼠标右键打开 Git Bash，配置用户名和邮箱。\n1 2 然后在 Git bash 使用：\n1 2 查看你的用户名和邮箱配置信息。\n# 🔗与 Github 创建连接 如果网站部署在 Github 上的话需要本地与 Github 创建链接。\n同样在 Git Bash，输入\n创建公钥文件，然后\n查看公钥文件。\n也可以直接到C:\\Users\\你的用户名\\.ssh\\文件夹下查看 id_rsa.pub 文件\n然后去 Github 添加 SSH 链接。\n登录 GitHub，点击右上角头像，进入设置，把 SSH 公钥填进去就 OK 了。\n再打开 Git Bash，输入下面的命令查看连接🔗状态。\n显示下面的内容证明链接成功。\n# 📲服务器\u0026amp;域名 如果想要将博客部署在自己的服务器，建议提前购买好域名和服务器。\n如果是大陆内服务器，可以进行域名备案，域名备案很简单，我在阿里云买的服务器和域名，通过阿里云进行备案，阿里云上提示是大约 20 天，但是我的域名备案 10 天就通过了。正好在等待域名备案的这段时间配置自己的网站，或者在服务器测试。域名备案通过了解析一下，配置一下反向代理就可以访问了。\n如果通过 Vercel 部署，也尽量买一个域名，Vercel 大陆无法访问，将域名解析到 Vercel 分配的域名，大陆才能访问。\n⚠️ 域名请三思后再买，要不自己网站建很长时间了不喜欢这个域名再去更换的话，再更换域名的话就很麻烦。\n我在阿里云注册的域名，.com的域名首年 35 块，划算。\n# 🎈第一阶段——基本配置、本地预览 做好上述准备就可以开始构建自己的第一个网站了。\n# 🕸创建网站 Hugo 安装成功后，可以找个你想创建网站文件夹的文件夹，按住 Shift，点击鼠标右键，点击此处打开 PowerShell。然后输入\nMyBlog 是文件夹名称，可以自己换。\n# 🎀主题 # ✨下载安装主题 我用的是 Stack 主题，你也可以到 Hugo主题列表找自己喜欢的主题。\n进入 Stack 主题 Github 仓库，可以git clone仓库，也可以直接把代码下载压缩包，解压到MyBlog/themes文件夹下。\n⚠️themes下面的主题文件夹一定要跟主题名称一样，要不 Hugo 找不到文件夹会报错。\n把主题文件夹下的exampleSite里的config.yaml配置文件复制到根目录MyBlog文件夹下。\n同样主题文件夹，exampleSite\\content 文件夹下的 page、categories 文件夹和两个 md 文件复制到MyBlog/content文件夹里。\n⚠️ posts文件夹是存放博客文章的文件夹，不要复制！示例博客文章有的内容无法显示就会报错，一会自己看一下他的文件格式自己新建 post 就行。\n之后可以用 vscode 操作，在MyBlog文件夹右键用 code 打开。\n终端运行命令hugo server创建本地端口调试配置。\n输出下面类似的内容就可浏览器预览了。\n浏览器打开localhost:1313，就能看到网站的雏形了。\n❌这里有一个问题，有可能本地端口被占用。自己找了很长时间问题，然后发现是因为电脑开启了Hyper-V，不知道为什么，把他关了就好了。\n如果1313端口打不开，Hugo 还给分配了另一个端口。\n最后成功浏览器本地打开网站，长这样⬇️\n# 🎃基本配置 主题基本的配置还是要去官网看文档，但是，Stack 的主题文档写的不是特别全面，有时候还需要再结合 Hugo 的官方文档，基本上可以搭建成功。\n基本的配置只需要修改前面复制到根目录的config.yaml里的内容就好了。\n一些基本的内容文档也写清楚了，不基本的内容就需要根据自己的情况修改了。\n大概看一下主题文件夹，你会发现跟你根目录下的文件夹结构差不多，需要修改什么文件的时候，就把主题文件夹里的文件夹复制到根目录同样的文件夹里。然后再修改，这样会直接覆盖主题文件夹的同一个文件，如果发现配置错的离谱了，直接把复制过去的文件删掉就好，这样就恢复主题默认了。\n⚠️ 任何修改尽量不要在主题文件夹修改，免得以后忘了都修改过什么内容，更新主题的时候把自己配置的内容覆盖了。\n# 📃试着创建篇文章 Hugo 是用 Markdown 创建文章，文章都保存在content文件夹下。可以通过YAML语法给文章配置元数据。\n使用命令hugo new post/文件夹名称/index.md可以新建一篇博客。\n# 📂文件结构 整个网站目录里，几个重要的文件夹：\nassets：存放图标、图片、js(ts)脚本文件，css(scss)样式文件； content：文章、页面、分类页面等文件； layouts：网页布局文件； public：hugo 编译后的网站文件夹； static：图片等静态文件； themes：主题文件夹。 在content文件夹下，\ncategories是分类页面目录。 page是归档、友链、关于之类页面的目录。 post（也可能是posts）是存放博客文件的目录。 有两种图片等文件存放方式比较建议。\npost文件夹下一篇文章是一个文件夹，文件夹里文章文件命名为index.md，所有图片文件都存放在这个文件夹下，引用时直接用图片名就可以![图名](image.png) post文件夹下直接存放 Markdown 文件，图片存储在static/images文件夹下，引用时![图名](/images/image.png) # 📋YAML 大概说一下stack主题给的示例：\n1 2 3 4 5 6 7 8 9 10 也可以添加\n标签会显示在主页标签云内。\n下面是我的 YAML 模板，可以参考。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 然后，好像没什么了。本地成功调试 OK 就可以把他给发布到网上了。\n# 👨💻第二阶段——网站部署 上文已经将自己的网站在本地运行成功了👀，但是运行在自己本地的网站怎么能叫网站呢，当然要让他上网🕸了。\n# 💥部署在 Vercel。 # 🛠仓库发布到 Github 还是回到 Vscode，在 VSCode 的侧边栏进入源代码管理。\n初始化仓库，建立本地 Git 仓库（在根目录会创建一个.git文件夹）。\n然后会有一大堆更改内容。在消息内输入内容（⚠️不输入内容无法提交），点击提交，将文件夹内的更改提交到本地 git 仓库。\n提交到本地仓库后，急须点击发布Branch可以将自己的仓库发布到 Github（前提是已经用 Github 登录了 Vscode）。\n命名 Github 仓库，选择公开仓库或者私人仓库（如果部署到 Vercel 的话，私人仓库也可以的）。\n看到一些文章里说的需要把仓库名称设置为用户名.github.io 的，其实不用，直接命名为MyBlog就可以，当然其他的也可以。\n❌这里可能会报错，如果报错，应该就是代理的问题。\n到终端用下面的命令改一下 git 的代理，7890 改为自己的端口。\n1 2 然后成功把自己本地 Git 仓库发布到了 Github 远程仓库。\n# 🔗部署到 Vercel 注册登录 Vercel，点击右上角 Add New...添加一个新的Project。\n从 Github 仓库选择刚才创建的博客仓库。\n然后给Project命个名，点击Deploy进行部署，稍微等一会，就部署成功了。\n进入Dashboard，Domains下就是 Vercel 给这个仓库分配的域名。就能进入自己的网站了🎉。\n但是这个域名在国内访问基本没有速度。所以最好是购买一个自己的域名。\n# 🕸Vercel 绑定域名 回到 Vercel，在新建的项目里进入设置，Domains里绑定自己的域名。直接输入域名，Add就可以。\n# 🎇域名解析 上一步添加域名后，会给我们 Type、Name、Value 三个值，这时需要回到域名服务商，以阿里云为例，进入域名控制台。\n在你的域名列表里，点击表格最后的有一个解析，进入解析并添加解析记录。\nVercel 中给我们的 Type 就是类型，Name 是主机记录，Value 是记录值，然后确认。\n完成自己域名到 Vercel 的解析。\n再回到 Vercel，发现已经成功绑定域名，这时你的网站就搭建完成。\n可以愉快的用自己的域名访问自己的网站了！\n# 👑部署在自己的服务器 本部分参考《基于Hexo的静态博客网站搭建并部署至云服务器》，大佬的教程十分详细，绝大部分都可以用在 Hugo 上，部分自动化流程相关会在下一节说明。\n⚠服务器访问需要防火墙开放 80 （http）和 443（https） 端口。参考—这篇文章\n# 🎿第三阶段——自动化流程 Hugo 一类的静态网站的小缺点就是发布比较麻烦，作为 obsidian 的重度用户，希望还是能在 obsidian 中写文章。\n同样是介绍两类部署，部署在 Vercel 和部署到服务器。\n# 🏈Obsidian 的配置 使用 Obsidian 实现如下功能：\n选题盒子 一键新建文章 一键预览 一键发布 文章管理 最终的 Obsidian 效果如下：\n# 🕳准备 Obsidian 的一个仓库就是一个文件夹，直接用网站目录作为 Obsidian 的仓库。建立一个@Extras文件夹存放非网站内容的 Obsidian 文件。\n⚠如果部署在 GitHub，整个网站目录是 git 仓库的话，建议把@Extras和.obsidian添加到.gitignore。看自己需求，如果感觉可以上传那就不用。\n# 📦选题盒子 我的选题都是一个个文件，也可以不这么麻烦，直接写在一个文件里。\n我的选题盒子使用到的插件，Dataview、QuickAdd、Buttons\nDataview：内容检索列表展示。 QuickAdd：快捷指令 Buttons：添加按钮 QuickAdd 使用 Template 创建一个在确定文件夹里新建文件的指令。然后用 Buttons 绑定这个指令。\n新建个文件，粘贴以下内容（记得删除转义\\）：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 给页面定义一个 CSS 类sidebar，然后在 obsidian 设置👉外观，添加 css 代码片段。样式自定义，下面是我的，提供参考。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 Button 按钮 CSS 参考：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 我的按钮向上偏移了一定量，为了跟标题在一行。\n# 📃一键新建文章 使用到的 obsidian 插件：`QuickAdd、Buttons\n新建一个模板文件夹，创建一个文章模板。\n我的模板👇\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 同上一节，使用 QuickAdd 创建快捷指令，将文章新建在content/post文件夹下。文件名称{{Date:YYYYMMDDHHmmss}}/index，含义是创建一个时间命名的文件夹，在这个文件夹下创建一个 index 文件。\n⚠\nobsidian 设置👉文件与链接，将附件默认存储路径改为当前文件所在文件夹，往 obsidian 粘贴图片的时候就直接存在文章相同目录了。 同样文件与链接改一下内部链接类型，关闭使用 wiki 链接，使用当前文件的相对路径，并使用标准 md 链接类型，如下图： 根据需求绑定在合适的位置添加一个按钮，绑定新建文章的 QuickAdd 命令。\n# 💎一键预览 一键预览需要设置脚本，QuickAdd 可以定义脚本，但是我不会JavaScript，询问 Chatgpt 后，实现了这个功能。有两种方式：\n# 🎛本地 js 脚本 建立一个preview.js文件，写入以下内容：\n1 2 3 4 5 6 7 8 9 10 11 就是 shell 命令，cd到网站根目录，执行hugo server 然后浏览器打开http://localhost:1313。\n⚠这会弹出一个终端窗口，关闭窗口就会关闭 hugo server\n然后将这个脚本和主页标题创建链接：\n点击主页标题就可以进行预览。\n# 💻Shell Commands 插件 新建一个 shell 命令，粘贴，\n1 原理相同，打开 hugo 服务，浏览器打开http://localhost:1313。\n同样会出现一个终端窗口，关闭终端退出 hugo server。\n# 🧲文章管理 使用到的 Obsidian 插件：Dataview\nObsidian 主页添加一个数据表格，进行文章的管理。\n1 2 3 4 5 6 7 8 9 10 11 检索content/post文件夹下的文章，展示其元数据。\n# 📰一键发布 一键发布分下面两种情况，实际操作流程一样。\n# 🔑自动部署到 Vercel 部署到 Vercel 的话，需要整个网站目录是 git 仓库，利用 Obsidian Git 插件将仓库push到 Github，再利用 GithubAction 实现自动编译，并把 public 目录添加到 gh-pages 分支。参考—这篇文章\n需要在网站根目录创建.github/workflows目录，新建一个main.yml文件，写入以下内容：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 Github Action 检测到 main 分支新的 Push，将 main 分支自动编译成网页文件到public文件夹。并将 public文件夹同步到gh-pages分支。Vercel 部署gh-pages分支。\n在 obsidian 中使用 Git 插件，执行 git commit和 git push。（可以用 QuickAdd 或者 Commander 插件将这两步骤创建宏。）\n再用 Commander 插件将命令按钮添加到喜欢的位置。\n# 🗝自动部署到服务器 同样使用 git，但部署服务器只需要 public 目录作为 git 仓库。\n根据《基于Hexo的静态博客网站搭建并部署至云服务器》这篇文章教程，服务器创建 Git 仓库后，本地与服务器连接也正常后，进行下面的步骤。\n先删除网站目录的 public 文件夹。\n在博客网站的根目录打开git bush，执行下面命令把服务器 Git 仓库clone到网站public目录。\n1 后面是你之前配置的仓库位置。\nclone 下来后，执行hugo -D编译网站，再cd public到 public 目录。\n1 2 3 一套操作下来，将本地编译好的public文件夹 push 到远程服务器仓库。\n❗前提是正确配置钩子，同样参考上述文章。\npush 成功，钩子会将你 push 的 public 文件夹内容clone到你设置的网站目录。\n域名，代理，都正确的话，很快你就能访问域名看到博客的更新了。\n步骤是不是还是很繁琐，自动化一下就好。\n回到 Obsidian。\n同样是 Git 仓库，但是 Git 插件 Git 仓库是 Obsidian 库，这个步骤的 Git 仓库是 public 文件夹，所以就不使用 Git 插件，换用shell Commands插件。\n❗设置 shell 的工作目录是网站目录路径，也就是 obsidian 库根目录。\n添加shell命令。\n1 这段命令首先hugo -D编译网站，然后转到 public文件夹，运行 git 发布三部曲。在cd ..回到网站根目录。\n到此，完成，博客一键发布。\n# 🥽Vercel，服务器同步发布？ 可以，因为两种方式都使用了 Git，可以直接用 shell command 插件写命令，先 hugo -D，发布到服务器，再将整个仓库 push 到 github，也可以用 QuickAdd 的宏，或者 Commander 的宏将两个步骤连起来。\n# 🎯上述用到的插件和其他推荐 Banners：主页的头图 Buttons：页面内添加按钮 Commander：给 Obsidian 不同位置添加快捷按钮。上述 Dataview：文章列表管理 Easy Typing：中文输入体验优化 Homepage：给 Obsidian 添加一个主页 Latex Suite：Latex 公式输入体验优化 Linter：文件自动格式化 Paste image rename：图片重命名 QuickAdd：给各种操作一个快捷指令 Shell commands：在 obsidian 使用 Shell 指令 Sortable：让 Dataview 点击表头改变排序 Git：Obsidian 内快捷使用 Git，可以用 Shell commands 替代 # 🎭第四阶段——一些有趣的小功能 # 💭评论 评论组件有很多，下面是 stack 内置支持的评论组件。\nCactus Cusdis Disqus DisqusJS Giscus Gitalk Remark42 Twikoo utterances Vssue Waline 大部分都需要登录，对于路过游客比较不方便，所以我用的 Twikoo,配置过程可以直接上官网查看，官网配置过程十分详细，提供了多种部署方式。\n我使用 docker 将他部署在了服务器上。分配了个子域名。\n# 🗨页面添加Memos 参考—基于 Memos 实现说说和清单功能，脚本内容可能是 memos 的更新有些错误，做了一些修改，外观样式也做了一些魔改，更符合 stack 主题。方式如下：\n在layouts/partials/widget文件夹下新建一个 memos.html 文件，粘贴如下内容。样式脚本都包含在这个文件内。\n下面脚本里的网址都换成自己的 memos 域名。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 然后到主题配置文件，引用一下新建的小部件。\n1 2 3 4 实现的效果\n右下角链接可以跳转到 memos 页面。\n如果有需求，可以把 twikoo 也嵌入 memos 页面。\n参考木木大佬的文章Memos x Twikoo\n# 🔬软件\u0026amp;装备页面 参考空白大佬的网站源码并配合自己的主题进行样式修改。\n关于这种添加侧边栏页面的操作，需要在 content/page文件夹下新建文件夹，新建的文件夹里创建一个index.md文件。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 layout 属性是指引用哪一个布局文件，存放在layouts/_default文件夹下。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 再给页面添加 CSS 样式，可以直接在assets/scss目录下新建一个 scss 文件，记得在 style.scss 导入新建的样式文件，也可以直接写在 custom.scss文件中。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 # ⭕加载界面 网页切换之间的加载页面。参考—为网站加入Loading加载页\n# 💟第五阶段——无止尽的主题折腾 因为我自己主题修改的很零散，代码很丑陋，并且直接在主题文件中修改。大部分主题文件都被我修改过内容，直接放弃后期的主题更新，冗余代码很多，如果有需要问的，可以评论区讨论。一些主题美化文章请看下一节的参考文章。\n# 📑参考 包括但不仅限于：\nMemos x Twikoo 空白 基于 Memos 实现说说和清单功能 hugo stack 主题美化 为网站加入Loading加载页 使用 Hugo 进行持续集成写作及同步 Twikoo 腾讯云函数部署转移到私有部署 | 张洪 Heo 使用 Obsidian 免费建个人博客 Hugo 博客写作最佳实践 基于 Hexo 的静态博客网站搭建并部署至云服务器 Hugo 博客部署到阿里云服务器 （3）Stack主题的自定义 … # 结语 本人技术小白，如果文章中有错误，恳请指正。 文章中大部分参考文章均已贴出链接，或许有遗漏，再次找到出处后会及时补上，请谅解。 如果遇到问题，欢迎评论。 ","date":"2024-04-03T13:38:34+08:00","image":"https://picsum.photos/800/600.webp?random=be3b2364","permalink":"https://mide.eu.org/posts/blog/%E7%94%A8hugo+github%E6%90%AD%E5%BB%BAbolg/","title":"用hugo+github搭建bolg"}]